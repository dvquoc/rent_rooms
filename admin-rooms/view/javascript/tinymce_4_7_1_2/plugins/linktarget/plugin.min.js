tinymce.PluginManager.add("linktarget", function(a) {
    function b(b) {
        return function() {
            var c = a.settings.link_list;
            "string" == typeof c ? tinymce.util.XHR.send({
                url: c,
                success: function(a) {
                    b(tinymce.util.JSON.parse(a))
                }
            }) : "function" == typeof c ? c(b) : b(c)
        }
    }

    function d(b) {
        function g(b) {
            //console.log(b);
        }

        function f(b) {
            console.log($(b.target).val());
        }
        var bie = function ($obj) {
            $obj.click(function () {
                alert();
            });
            return $obj;
        };

        var gettag =function(a, b) {
            return b = b || a.selection.getStart(),a.dom.getParent(b, "h3[id]")
        }
        var getcontentTag = function(a, b) {
            var c = b ? b.innerText || b.textContent : a.getContent({
                format: "text"
            });
            return c.replace(/\uFEFF/g, "")
        }

        var i, j, k, l, m, n, o, p, q, r, s, t;
        var v = a.selection, w = a.dom;  i = v.getNode();
        var data_old ={};

        var g = gettag(a);
        // if(g) {
        //     g = gettag(a).nodeName.toLowerCase();
        //     console.log(g);
        // }
        data_old.name = getcontentTag(a.selection,g);
        data_old.id = g ? a.dom.getAttrib(g, "id") : "#";

        var u = [
            {
                name: "name",
                type: "textbox",
                size: 40,
                autofocus: 1,
                label: "Name target",
                value:data_old.name
            },{
            name: "id",
            type: "textbox",
            value:data_old.id,
            size: 40,
            autofocus: 0,
            label: "Input target"
        }

        ]
        a.windowManager.open({
            title: "link target",
            body: u,
            onSubmit: function(b) {
                i = {
                    id: b.data.id ? (b.data.id).replace("#", ""): null,
                    title: b.data.name ? b.data.name : null,
                    "data-ismenu": '1'
                };

                if(a.selection.getNode().nodeName.toLowerCase()!='h3'){
                    a.insertContent(a.dom.createHTML("h3", i, a.dom.encode(i.title)));
                }else{
                    $.each(i,function (key,item) {
                        $(g).attr(key,item);
                    })
                    $(g).text(b.data.name);
                }
                if($("#_project_link").size()){
                    var list_link = $("#myGrid2").find("h3");
                    var menu = [];
                    $.each(list_link,function (key,item) {
                        if($(item).data('ismenu')){
                            var data = {title:$(item).text(),link:"#"+$(item).attr('id')};
                            menu.push(data);
                        }
                    });
                    $("#_project_link").val(JSON.stringify(menu));
                }
                a.windowManager.close();
            }
        })
    }
    a.addButton("linktarget", {
        title: 'Insert linktarget',
        text: 'menu',
        onclick: b(d),
        onPostRender: function() {
            var _this = this;   // reference to the button itself
            a.on('NodeChange', function(e) {
                //activate the button if this parent has this class
                _this.active( a.selection.getNode().nodeName=='CODE' ? true : false );
            })
        }
    })
});